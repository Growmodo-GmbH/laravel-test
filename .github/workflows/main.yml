name: Deploy to Test Server
 
on:
  push:
    branches-ignore: [ main, deploy-*, feature-*, patch-*, fix-*, test-* ]
    
env:
  BRANCH_NAME: ${{ github.ref_name }}
  REPO_NAME: ${{ github.event.repository.name }}
  REPO_URL: ${{ github.event.repository.url }}
  DEPLOY_BRANCH: deploy-${{ github.ref_name }}
  EVENT_NAME: ${{ github.event_name }}
  DB_DEFAULT: "laravel-test"
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Environment
      run: |
        npm install dotenv --global
    - name: Load Environment Variables
      run: |
        if [ -f .env ]; then
          export $(echo $(cat .env | sed 's/#.*//g'| xargs) | envsubst)
        fi
        echo "DB_DATABASE=$(echo $DB_DATABASE)" >> $GITHUB_ENV
    - name: Check DB_DATABASE
      run: |
        if [ "${{ env.DB_DATABASE }}" = "${{ env.DB_DEFAULT }}" -o "${{ env.DB_DATABASE }}" = "" ]; then
          echo "DB_DATABASE is not configured. Exiting workflow."
          echo "" && exit 1
        else
          echo "DB_DATABASE is configured: ${{ env.DB_DATABASE }}"
        fi
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.PUSH_TOKEN }}
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - run: npm install
    - run: npm run build
    - name: Commit built assets
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -B ${{ env.DEPLOY_BRANCH }}
        git add -f public/
        git commit -m "Build front-end assets"
        git push -f origin ${{ env.DEPLOY_BRANCH }}
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: 'cd /var/www/laravel-test-server && ./server_deploy.sh ${{ env.BRANCH_NAME }} ${{ env.DEPLOY_BRANCH }} ${{ env.REPO_URL }}'
